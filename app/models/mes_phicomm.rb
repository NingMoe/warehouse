class MesPhicomm

  def self.check_sn(barcode_sn)
    sql = "select sn from txdb.phicomm_mes_001 where sn=?"
    records = PoReceipt.find_by_sql([sql, barcode_sn])
    if records.present?
      sn = records.first.sn
    else
      sn = 'N/A'
    end
    sn
  end

  def self.query_cartonnumber(cartonnumber)
    sql = "select sn from txdb.phicomm_mes_001 where query_cartonnumber=?"
    records = PoReceipt.find_by_sql([sql, query_cartonnumber])
    if records.present?
      sn = records.first.sn
    else
      sn = 'N/A'
    end
    sn
  end

  def self.print_mac_addr(barcode_sn, printer_ip)
    sql = "select mac_add from txdb.phicomm_mes_001 where sn=?"
    records = PoReceipt.find_by_sql([sql, barcode_sn])
    if records.present?
      mac_add = records.first.mac_add
      print_mac_addr_label(mac_add, printer_ip)
    else
      mac_add = 'N/A'
    end
    mac_add
  end

  def self.print_mac_addr_label(mac_add, printer_ip)
    zpl_command = "
        ^XA~TA000~JSN^LT0^MNW^MTT^PON^PMN^LH0,0^JMA^PR4,4~SD15^JUS^LRN^CI0^XZ
        ^XA
        ^MMT
        ^PW531
        ^LL0177
        ^LS0
        ^BY2,3,56^FT76,137^BCN,,N,N
        ^FD>:#{mac_add}^FS
        ^FT138,66^A0N,25,24^FH
        ^FD#{mac_add}^FS
        ^FT90,66^A0N,25,24^FH
        ^FDSN:^FS
        ^PQ1,0,1,Y^XZ
    "
    s = TCPSocket.new(printer_ip, '9100')
    s.write zpl_command
    s.close
  end

  def self.print_sn(barcode_sn, printer_ip)
    sql = "select sn from txdb.phicomm_mes_001 where sn=?"
    records = PoReceipt.find_by_sql([sql, barcode_sn])
    if records.present?
      sn = records.first.sn
      print_sn_label(barcode_sn, printer_ip)
    else
      sn = 'N/A'
    end
    sn
  end

  def self.print_sn_label(sn, printer_ip)
    zpl_command = "
      ^XA~TA000~JSN^LT0^MNW^MTT^PON^PMN^LH0,0^JMA^PR4,4~SD15^JUS^LRN^CI0^XZ
      ^XA
      ^MMT
      ^PW531
      ^LL0177
      ^LS0
      ^BY2,3,56^FT76,137^BCN,,N,N
      ^FD>:#{sn}^FS
      ^FT138,66^A0N,25,24^FH
      ^FD#{sn}^FS
      ^FT90,66^A0N,25,24^FH
      ^FDSN:^FS
      ^PQ1,0,1,Y^XZ
    "
    s = TCPSocket.new(printer_ip, '9100')
    s.write zpl_command
    s.close
  end

  def self.print_sn1(barcode_sn, printer_ip)
    sql = "select sn from txdb.phicomm_mes_001 where sn=?"
    records = PoReceipt.find_by_sql([sql, barcode_sn])
    if records.present?
      sn = records.first.sn
      print_sn1_label(barcode_sn, printer_ip)
    else
      sn = 'N/A'
    end
    sn
  end

  def self.print_sn1_label(sn, printer_ip)
    zpl_command = "
      ^XA~TA000~JSN^LT0^MNW^MTT^PON^PMN^LH0,0^JMA^PR4,4~SD15^JUS^LRN^CI0^XZ
      ^XA
      ^MMT
      ^PW531
      ^LL0177
      ^LS0
      ^BY2,3,56^FT58,137^BCN,,N,N
      ^FD>:#{sn}^FS
      ^FT121,66^A0N,25,24^FH
      ^FD#{sn}^FS
      ^FT73,66^A0N,25,24^FH
      ^FDSN:^FS
      ^PQ1,0,1,Y^XZ
    "
    s = TCPSocket.new(printer_ip, '9100')
    s.write zpl_command
    s.close
  end

  def self.print_sn2(barcode_sn, printer_ip)
    sql = "select sn from txdb.phicomm_mes_001 where sn=?"
    records = PoReceipt.find_by_sql([sql, barcode_sn])
    if records.present?
      sn = records.first.sn
      print_sn2_label(barcode_sn, printer_ip)
    else
      sn = 'N/A'
    end
    sn
  end

  def self.print_sn2_label(sn, printer_ip)
    zpl_command = "
      ^XA~TA000~JSN^LT0^MNW^MTT^PON^PMN^LH0,0^JMA^PR4,4~SD15^JUS^LRN^CI0^XZ
      ^XA
      ^MMT
      ^PW531
      ^LL0177
      ^LS0
      ^BY2,3,56^FT76,137^BCN,,N,N
      ^FD>:#{sn}^FS
      ^FT138,66^A0N,25,24^FH
      ^FD#{sn}^FS
      ^FT90,66^A0N,25,24^FH
      ^FDSN:^FS
      ^PQ1,0,1,Y^XZ
    "
    s = TCPSocket.new(printer_ip, '9100')
    s.write zpl_command
    s.close
  end

  def self.print_color_box(barcode_sn, printer_ip)
    sql = "select mac_add from txdb.phicomm_mes_001 where sn=?"
    records = PoReceipt.find_by_sql([sql, barcode_sn])
    if records.present?
      mac_add = records.first.mac_add
      print_color_box_label(barcode_sn, printer_ip)
    else
      mac_add = 'N/A'
    end
    mac_add
  end

  def self.print_color_box_label(sn, printer_ip)
    zpl_command = "
      ^XA~TA000~JSN^LT0^MNW^MTT^PON^PMN^LH0,0^JMA^PR4,4~SD15^JUS^LRN^CI0^XZ
      ^XA
      ^MMT
      ^PW768
      ^LL0413
      ^LS0
      ^FT93,239^A0N,22,19^FH\^FDS/N:^FS
      ^FT129,240^A0N,21,21^FH\^FD#{sn}^FS
      ^BY1,3,47^FT92,295^BCN,,N,N
      ^FD>:#{sn}^FS
      ^PQ1,0,1,Y^XZ
    "
    s = TCPSocket.new(printer_ip, '9100')
    s.write zpl_command
    s.close
  end

  def self.print_outside_box(params)
    # params field
    # barcode
    # rowcounter
    # printer_ip
    # pack_qty
    # mo_number
    # carton_number
    # sn1
    # sn2
    # sn3
    # sn4
    # sn5
    # sn6
    # sn7
    # sn8
    # sn9
    error_msgs = []
    error_msgs.append "打印機IP不可為空!" if params[:printer_ip].blank?
    error_msgs.append "工單號碼不可為空!" if params[:mo_number].blank?
    error_msgs.append "包裝數量不可為空!" if params[:pack_qty].blank?
    error_msgs.append "包裝箱號不可為空!" if params[:carton_number].blank?
    error_msgs.append "掃入條碼不可為空!" if params[:barcode].blank?

    sn_array = []
    (1..9).each do |i|
      sn_array.append params["sn#{i}"] if params["sn#{i}"].present?
    end
    error_msgs.append "條碼重複掃描!" if sn_array.include?(params[:barcode])

    sql = "select mac_add from txdb.phicomm_mes_001 where sn=?"
    records = PoReceipt.find_by_sql([sql, params[:barcode]])
    if records.present?
      mac_add = records.first.mac_add
      error_msgs.append "S/N未和MAC地址綁定!" if mac_add.blank?
    else
      error_msgs.append "S/N不存在或者錯誤!"
    end

    carton_number = (params[:carton_number] || '1').to_i
    if error_msgs.blank?
      #加入SN數組
      sn_array.append params[:barcode]
      if (params[:pack_qty] || '1').to_i == sn_array.size
        label_barcode = "#{params[:mo_number]}C#{carton_number.to_s.rjust(4, '0')}"
        sn_array_text = sn_array.join("','")
        sql = "update txdb.phicomm_mes_001 set cartonnumber = '#{label_barcode}', woid='#{params[:mo_number]}' where sn in ('#{sn_array_text}')"
        PoReceipt.connection.execute sql
        #避免SN數組少於9個元素
        (sn_array.size..8).each {sn_array.append ''}

        # 打印标签
        print_outside_box_label(label_barcode, sn_array, params)
        carton_number += 1
        sn_array.clear
      end
    end
    (sn_array.size..8).each {sn_array.append ''}
    return [sn_array, error_msgs, mac_add, carton_number.to_s.rjust(4, '0')]
    #print_outside_box_label(barcode_sn, printer_ip)
  end

  def self.print_outside_box_label(label_barcode, sn_array, params)
    zpl_command = "
      ^XA~TA000~JSN^LT0^MNW^MTT^PON^PMN^LH0,0^JMA^PR4,4~SD15^JUS^LRN^CI0^XZ
~DG000.GRF,08064,084,
,:::::::::::::::::::::M01FOFD0J01FFD0M017FF0H07FF40I015FOF10H01FMFD0I013FF40O01FFC01FFD10L01017FF0O010H010H01,M03FPFE80H03FHF80L03FHF800FHFC0I01FOFE0H01FOFE0I0BFFE0O0IFC03FHF80N03FHFP07800F80,M07FQFC0H07FHF80L03FHFC00FHFC0I0QFE001FQF40H0JFO01FHFC03FHFC0N07FHFP07C0070N07,M0SFE8003FHF80L03FHF800FHFC0H03FPFA003FFEFLFEFE0H0HFEF80M03FHFC03FHFC0N0JFP07A0070M01F003FLFE0,L01FSFC003FHF80L03FHF801FHFD0H07FPF801FSF400FIFC0L017FHFC03FIFN03FIFK015I57C007D5I5I01FC03FMF0,M0TFE003FHF80L03FHF800FHFC0H0RF800FSFC00FIFE0M0JFC03FIF80L03FIFK01FJF800FKFJ0BE03FLFE8,L01FIFE0J05FIFH07FHF80L03FHFC00FHFC005FIF40N05FIF40I01FIFE00FJFM01FIFC03FIFC0L07FIFK01FJFC007FJFJ03F4045F4H45F0,M0EFEF0L07EFF803FFE80L03FFE800FFEC002FEFE0O03EFEE0K03FHFE00FEFEF80K03EFEFC03FEFEC0L0FEFEF0O0680060O0FC0H0E0I0E0,L01FIFM07FHFC07FHF80L03FHFC01FHFD007FHFD0O07FHFC10H0101FIFH0KFC0K07FIFC03FIFD10J01FJFP07C0070H01010H01FF001F4001F0,M0IFE0L03FHF803FHF80L03FHF800FHFC007FHF80O07FHFC0L0JFH0KF80K03FIFC03FIFE0K02FJFP07800F80N0FE0H0F8001E8,L01FHFE0L03FHFC07FHF80L03FHFC00FHFC007FHF80O07FHF40L0JFH0KFC0K07FIFC03FJFL07FJFP07C0070O07E0H0F4001F0,M0IFE0L03FHFC03FHF80L03FHF800FHFC007FHFQ07FHFN0BFHFH0KFE0J01FJFC03FJF80J07FJFP07A0070O0380H0F0H01E0,L01FHFE0L03FHFC03FHF80L03FHF801FHFD007FHFQ07FHFN07FHFH0LF80I01FJFC03FJFC0J07FJFK01FJFC007FJFK010H01F4001F0,M0IFE0L03FHFC03FHF80L03FHF800FHFC00FIFQ0JFN03FHFH0LF80I03FJFC03FJFC0J0LFL0KF800FJFE0O0F8001E8,L01FHFE0L03FHFC07FHF80L03FHFC00FHFC007FHFQ07FHFN07FHFH0LFC0I07FJFC03FKFJ03FKFL0KFC007FIFE0O0F4001F0,M0EFEE0L03EFEC03EFF80L03EFF800EFEC006FHFQ07EFF0M03EFE00FEFEFFE0I06FHFEFC02FHFEFE80H03EFEFEF0O0680070T0E0I0E0,L01FHFE0L03FHFC07FHFC0L07FHFC01FHFD007FHFQ07FHFN07FHFH0MFI01FKFC03FKFC0H07FKFP07C0070P01001F4001F0,M0IFE0L03FHFC03FHFC0L03FHF800FHFC00FIFQ0JFN03FHFH0IFE9FF8003FE9FHFC03FHF8FFC0H0HF8FIFP07800F80S0F8001E8,L01FHFE0L03FHFC07FHFC0L07FHFC00FHFC007FHFQ07FHFN07FHFH0JF07FC007FC1FHFC03FHFC7FF003FF07FHFP07C00740L0IFJ0F4001F0,M0IFE0L03FHFC02FHFE0L0EFHF800FHFC007FHFQ07FHFN03FHFH0IFE03FE01FF81FHFC03FHF80FF807EE07FHFK07FJF8007FJFC00FHFJ0F0H01E0,L01FHFE0L03FHFC03FIFC0J07FIF801FHFD007FHFQ07FHFN03FHFH0JF01FKF81FHFC03FHFC07FJFC07FHFK07FJFC007FJFC00FHFI01F4001F0,M0IFE0L03FHFC03FJFJ8AFJF800FHFC00FIFQ0JFN03FHFH0IFE81FJFE01FHFC03FHF807FJF807FHFL0J8F800F8I8080I0F0I0F8001E8,L01FHFE0L03FHFC07FTFC00FHFC007FHFQ07FHFN07FHFH0JFH07FIFC01FHFC03FHFC07FJFH07FHFP07C7070O0F0FLF9F0,M0EFFE0L03EFFC03EFEFEFEFEFEFHFE800EFEC006FEF0P07EFE0M03EFE00FEFE003EFEF800FHFC02FHF802FEFEE006FEF0O068F870O0F0FEFEFEF8E0,L01FHFE0L03FHFC07FTFC01FHFD007FHFQ07FHFN07FHFH0JFH03FIF801FHFC03FHFC01FIFD007FHFN010507850H01010H01F0FLF9F0,M0IFE0L03FHF803FTF800FHFC00FIFQ0JFN03FHFH0IFE801FHFE001FHFC03FHF8007FHF8007FHFR07A0P0F08H8F8H89E8,L01FIFM07FHFC07FTFC00FHFC007FHFQ07FHFN07FHFH0JFH017FFE001FHFC03FHFC007FHFI07FHFK0M47E4K4K0F0I0F4001F0,M0JF80K0IFE803FIFE0J0KF800FHFC007FHFQ07FHFN03FHFH0IFE0H03FFC001FHFC03FHF8002FHFI07FHFK07FSFK0F0I0F0H01E0,L01FJFH5I17FIFH03FIFC0J01FIF801FHFD007FHFQ07FHFN03FHFH0JFI03FFC001FHFC03FHFC001FFD0H07FHFK07FSF40H01F0H01F4001F0,M0TFC003FHFE0L0JF800FHFC00FIFQ0JFN03FHFH0IFE8001FE8001FHFC03FHF80H07F80H07FHFK07FSF80I0F0I0F8001E8,L01FSFC007FHFC0L07FHFC00FHFC007FHFQ07FHFN07FHFH0JFJ07C0H01FHFC03FHFC0H05D0I07FHFN07F0J01FC0L0F0I0F4001F8,M0EFEFEFHFEFIFE0H03EFE80L03EFF800EFEC006FHFQ07EFF0M03EFF00FEFE0O0FEFC02FEF80N07FEF0M02F0K0F0M0F0I0E0H01F8,L01FRFC0H07FHFC0L07FHFC01FHFD007FHFQ07FHFN07FHFH0JFM0101FHFC03FHFC0H010J07FHFN01F80I05F0L01F0H01F4001F8,M0RFC0I03FHF80L03FHF800FHFC00FIFQ0JFN03FHFH0IFE80M01FHFC03FHF80N07FHFO0FE0I0FE0M0F0I0F80H0F8,L01FJFM4K07FHF80L03FHFC00FHFC007FHFQ07FHFN07FHFH0JFO01FHFC03FHFC0N07FHFO07F0H01FC0M0F0I0F4001781C,M0JFC0Q02FHF80L03FHF800FHFC007FHFQ07FHFN03FHFH0IFE0N01FHFC03FHF80N07FHFP0FA007F0N0F0I0F0I0781E,L01FIFS03FHF80L03FHF801FHFD007FHFQ07FHFN07FHFH0JFO01FHFC03FHFC0N07FHFO01FF01FD0M01F0141F40017C1F,M0IFE0R03FHF80L03FHF800FHFC007FHF80O07FHF80L0JFH0IFE80M01FHFC03FHF80N07FHFP01FA7F80N0F03C0F80H0781E,L01FHFE0R07FHF80L03FHFC00FHFC007FHFC0O07FHFC0K01FIFH0JFO01FHFC03FHFC0N07FHFQ0JFP0F1FC0F40H07C1E,M0EFFE0R03EFE80L03FFE800EFEC007FEFA0O07EFEE0L0FEFE00FEFE0O0IFC02FEF80N06FEF0P03FF80O0F2F80E0I03C1E,L01FHFE0R07FHF80L03FHFC01FHFD005FIFP05FIFL07FIFH0JFO01FHFC03FHFC0N07FHFN01017FHF010L01FHFH1F40H07D1C,M0IFE0R03FHF80L03FHF800FHFC001FIFA0N01FIFE0I01FIFE00FHFE80M01FHFC03FHF80N07FHFP0KFE80M0HFC00F80H03E3C,L01FHFE0R07FHF80L03FHFC00FHFC001FJFM4H01FIFD4I45FIFC00FIFO01FHFC03FHFC0N07FHFP07FJF40L01FFC00F40H07E3C,M0IFE0R03FHF80L03FHF800FHFC0H0RF800FRFEC00FHFE0N01FHFC03FHF80N07FHFO0IF83FHFA0K01FE0H0F0I03FBC,L01FHFE0R03FHF80L03FHF801FHFD0H07FPFC007FRFI0JFO01FHFC03FHFC0N07FHFL015FHFD015FIFD40H03FC001F40H01FFC,M0IFE0R03FHF80L03FHF800FHFC0H01FPFE001FQFE0H0IFE80M01FHFC03FHF80N07FHFK0BFIFA0I03FIFC0H01F0I0F80I0HFC,L01FHFE0R07FHF80L03FHFC00FHFC0I07FPFI07FPF40H0JFO01FHFC03FHFC0N07FHFK07FHFC0K05FHF40H01E0I0F40I07FC,M0IFE0R03EFE80L02EFF800FHF80J0FEFEFEFEFEF0I0AFEFEFEFHF80I03EFE0O0IF802FEF80N06FEE0J03EF80N02F0J080I0E0J03F8,M01510S0H150O01510H01510K0H151515H5150I01515H515140J01550O015150H0I5P01510H01005D0P0H1L010H0F40I0170,,::::::::::::::::::::::::~DG001.GRF,12288,096,
,:::::::::::::::::::::::::::::::::h0F801F0gI030J080P0180,gH0F80L01F0L0F801F0gI03E0H03C0P01F0O07C0J03E0P03E0Q0180,gH0F80L01F0L0F801F0K010V07E0H07C0P03E0O07C0J03E0P03E0080N03F0,gH0F80L01F0L0F801F0K0380U07C0H03E0P03E0O07C0J03E0P03E01C0N03E0gR060,gg0E0O01F00FHFC0M0HFC0020I07C0I03F0H0F803E0J01F0V03FF007C0K07C0L03E0O0F80H01FE0J07C0H01C0Y0F0P01FHFE,g040O01F007FC0O0380L07C0I01E0gQ03FE0020L0180L03E0O0F80P07C0I080Y04,gU0380,,:::::::::::::::::::::::::::::::::::~DG002.GRF,02688,028,
,::::::::::::::::::::::::N0E0,N0E0gR01C0J07,N0E0J03FMFC0W01C0J07,N0E0J03FMFC0L07FMFH01C00E007,:N0E0J0380K01C0L07FMFH01C00E007,N0E0J0380K01C0L0700E03807001C00E007,::J0NFE038FKF1C0L0700E03807001C00E007,::J0E0H0E0H0E038001C001C0L0700E03807001C00E007,::::J0E0H0E0H0E038001C001C0L0701C03807001C00E007,J0E0H0E0H0E0387FJF1C0L0701C03807001C00E007,::J0E0H0E0H0E038001C001C0L0703C03807001C00E007,J0NFE038001C401C0L0703803807001C00E007,J0NFE038001CE01C0L0707803C07001C00E007,J0NFE038001C701C0L070F003FF7001C00E007,J0E0H0E0H0E038001C381C0L071F001FF7003800E007,J0E0H0E0H0E038001C1C1C0L0H7E0H0HF7003800E007,N0E0J038001C081C0L07FC0J07003800E007,N0E0J038001C001C0L0H780J07003800E007,N0E0J039FKF9C0L0720K07003800E007,N0E0J039FKF9C0L070L07007800E007,N0E0J039FKF9C0L070L070070H0E007,N0E0J0380K01C0L070L0700F0H0E007,:N0E0J0380K01C0L070L0701E0H0E007,N0E0J0380K01C0L07FMF03E0H0E007,N0E0J03FMFC0L07FMF03C0H0E007,N0E0J03FMFC0L07FMF0780H0E007,N0E0J03FMFC0L070L070F80K07,N0E0J0380K01C0L070L07070L07,N0E0J0380K01C0V020L07,,:::::::::::::::::::::::::::::~DG003.GRF,01536,016,
,:::::::::::::::::::::::::::::::::::::::::O0E0H0E,O0E080E,M040E0E0E0I03FKFC,M0E0E1C1C0I03FKFC,M070E1C1C0I0380I01C,M078E381C0I0380I01C,M038E781C0I03FKFC,M03CE70380I03FKFC,M010E203FHFC0380I01C,O0E003FHFC0380I01C,L01FIFE7FHFC03FKFC,L01FIFE700E003FKFC,L01FIFE700E00380I01C00E0,N01E00F00E00380I01C01F0,N03E80F00E0P01F0,N0HFC1F01C0FOF1F0,M01EFE3F81C0FOF0E0,M03CEF3F81C,M078E39B81C,L01E0E1C381C003FKFC,L03C0E08383C003FKFC,L01830H01C38003803801C,N078001C38003803801C,N070H01C78003FKFC,L01FIF80E70H03FKFC,L01FIF80E70H03803801C,L01FIF80FF0H03803801C,M01C03807E0H03803801C,M03C07007E0H03FKFC,M0780F003C0H03FKFC,M07C0E007C0H03803801C00E0,M01F1C007E0K0380I01F0,N0HFC00FF0K0380I01F0,N03F801EF803FMFC1F0,N03FF03E7803FMFC0E0,N0IFC7C3C0J0380,M0HF879F81F0J0380,L03FE01BF00F8FOF0,L01F0H07E007CFOF0,L0180H03800380,Q010H01,,::::::::::::~DG004.GRF,01536,016,
,:::::::::::::::::::::::::O01C0I01C0,:O01C0I01C0H0MF8,:N041C20401C0H0MF8,N0E1C38701C0H0E0J038,N0E1C70F81C0H0E0J038,N061C707C1C0H0E0J038,N071CF01E1C0H0E0J038,N071CE00F1C0H0E0J038,N079CE0061C0H0E0J038,N039DE0041C0H0MF8,N021CC0H01C0H0MF80380O01C0I01C0H0MF807C0O01C00801C0H0E0J03807C0N0JF8E01C0H0E0J03807C0N0JF9F01C0Q0380N0JF87C1C0,O03C003E1C03FNFE0,O03C001F1C03FNFE0,O03C0H0E1C03FNFE0,O07D0H041C0H01C,O07F80H01C0H038,O0FDC0H01CF0038,O0HDE0H07FF0070,N01DCF03FIFH07FKF8,N01DC7BFIF8007FKF8,N039C3BFF9C0H07FKF8,N039C13C01C0N038,N071C0I01C0N038,N0F1C0I01C0N0380380N0E1C0I01C0N03007C0N041C0I01C0N03007C0N041C0I01C0N07007C0O01C0I01C0N0700380O01C0I01C0N0E0,O01C0I01C0J07FHFE0,O01C0I01C0J07FHFC0,O01C0I01C0J03FHF,O01C0I01C0,,:::::::::::::::::::::::::::::~DG005.GRF,01536,016,
,::::::::::::::::::::::::::::::::::::O0180,O03C0O01FHF0,O0780J07FMF0,K020H0780J07FMF0,K0F0H0JFI07FIF8,K07001FIFM070,K07801FIFM070,K03803C00E0L070,K03C07801C003FNFE,K01C0F8038003FNFE,K01E1F0070H03FNFE,L0F3E00E0M070,L0F7FKFL070J038,L043FKFH01FLFC07C,M017FJFH01FLFC07C,P03807001FLFC07C,P03807001C007001C038,P03807001C007001C0,:L043FLF01FLFC0,L073FLF01FLFC0,L0F3FLF01FLFC0,L0E0H03807001C007001C0,::K01C0H03807001FLFC0,:K01C0FKFH01FLFC0,K03C0FKFH01C007001C0,K0380FKFL070,K0380H038070K070J038,K0780H03807007FMF07C,K070I0380I07FMF07C,:K0F0I0380M070J038,K0E0I0380M070,K020I0780H03FNFE,N03FF80H03FNFE,N03FF0I03FNFE,N01FE0,,::::::::::::::::::~DG006.GRF,01536,016,
,:::::::::::::::::::::::::::::::::::::::::M0E0H0380,L01C0H0780,L01C0H0F0J0MF80,L0380H0F0J0MF80,L07FHF1FIFH0MF80,L07FHF1FIFH0E0J0380,L0JF3FIFH0E0J0380,K01E1007840I0E0J0380,K01C380F0F0I0E0J0380,K0381C1E0780H0E0J0380,K0781C1C01C0H0E0J0380,K0F1CE080080H0MF80,K021C40M0MF8038,L01C03FIFC00FLF807C,L01C03FIFC00E0J03807C,:L01C038001C0P038,K07FHF38001C0,K07FHF38001C3FNFE,:L03C03FIFC3FNFE,L03C03FIFC001C0,L03C03FIFC00380,L07D038001C00380,L07F838001C007,L0HFC38001C007FKF80,L0HDE38001C007FKF80,K01DCF3FIFC007FKF80,K039C7BFIFC0M0380,K039C33FIFC0M0380,K071C038001C0M038038,K0F1C038001C0M03007C,K0E1C038001C0M03007C,K041C038001C0M07007C,K041C038001C0M070038,L01C03FIFC0M0E,L01C03FIFC0I07FHFE,L01C03FIFC0I07FHFC,L01C038001C0I03FHF0,L01C038001C0,:,::::::::::::~DG007.GRF,01536,016,
,:::::::::::::::::::U0380,:M03FIFE003800FLF80,M03FIFE383800FLF80,:N0381C0383800E0J0380,:::::N0381C0383800FLF80,M0LF383800FLF8038,M0LF383800FLF807C,M0LF383800E0J03807C,N0381C0383800E0J03807C,N0381C038380P038,N0701C038380,N0701C0H0383FNFE,N0F01C0H0383FNFE,N0E01C0H0783FNFE,M01C01C01FF8001C0,M03C01C01FF0H0380,M0780I01FE0H0380,M010H0380K07,Q0380K07FKF80,:N0NFI07FKF80,N0NFO0380,:Q0380Q038038,Q0380Q03007C,:Q0380Q07007C,Q0380Q070038,Q0380Q0E,M0PFJ07FHFE,M0PFJ07FHFC,M0PFJ03FHF0,,::::::::::::::::::::::::::::::::::::^XA
^MMT
^PW1228
^LL1772
^LS0
^FT352,160^XG000.GRF,1,1^FS
^FT224,288^XG001.GRF,1,1^FS
^FT896,608^XG002.GRF,1,1^FS
^FT736,480^XG003.GRF,1,1^FS
^FT736,384^XG004.GRF,1,1^FS
^FT64,608^XG005.GRF,1,1^FS
^FT64,480^XG006.GRF,1,1^FS
^FT64,384^XG007.GRF,1,1^FS
^FT189,587^A0N,42,40^FH\^FD#{params[:net_weight]}kg^FS
^FT881,456^A0N,42,40^FH\^FD#{params[:pack_qty]}PCS^FS
^FT876,344^A0N,42,40^FH\^FD#{params[:material_number]}^FS
^FT195,337^A0N,42,40^FH\^FD#{params[:model_number]}^FS
^BY2,3,65^FT158,1168^BCN,,Y,N
^FD#{sn_array[0]}^FS
^BY2,3,65^FT672,1065^BCN,,Y,N
^FD#{sn_array[1]}^FS
^BY2,3,65^FT672,963^BCN,,Y,N
^FD#{sn_array[2]}^FS
^BY2,3,65^FT672,860^BCN,,Y,N
^FD#{sn_array[3]}^FS
^BY2,3,65^FT672,757^BCN,,Y,N
^FD#{sn_array[4]}^FS
^BY2,3,65^FT158,1065^BCN,,Y,N
^FD#{sn_array[5]}^FS
^BY2,3,65^FT158,963^BCN,,Y,N
^FD#{sn_array[6]}^FS
^BY2,3,65^FT158,860^BCN,,Y,N
^FD#{sn_array[7]}^FS
^BY2,3,65^FT158,757^BCN,,Y,N
^FD#{sn_array[8]}^FS
^BY4,3,65^FT194,510^BCN,,N,N
^FD#{label_barcode}^FS
^FT192,420^A0N,42,40^FH\^FD#{label_barcode}^FS
^PQ1,0,1,Y^XZ
^XA^ID000.GRF^FS^XZ
^XA^ID001.GRF^FS^XZ
^XA^ID002.GRF^FS^XZ
^XA^ID003.GRF^FS^XZ
^XA^ID004.GRF^FS^XZ
^XA^ID005.GRF^FS^XZ
^XA^ID006.GRF^FS^XZ
^XA^ID007.GRF^FS^XZ
    "
   s = TCPSocket.new(params[:printer_ip], '9100')
    s.write zpl_command
    s.close
  end

  def self.update_kcode(barcode, kcode)
    update_count = 0
    sql = "update txdb.phicomm_mes_001 set kcode='#{kcode}' where (sn='#{barcode}' or mac_add='#{barcode}')"
    begin
      update_count = PoReceipt.connection.execute(sql)
    rescue
    end
    update_count
  end

  def self.get_printer(pc_ip, program)
    # pc_ip
    # program
    # printer_ip
    # printer_port
    sql = "select printer_ip, printer_port from txdb.phicomm_mes_printer where pc_ip=? and program=?"
    records = PoReceipt.find_by_sql([sql, pc_ip, program])
    if records.present?
      return [records.first.printer_ip, records.first.printer_port]
    else
      sql = "insert into txdb.phicomm_mes_printer (pc_ip, program, printer_port) values ('#{pc_ip}','#{program}','9100')"
      PoReceipt.connection.execute(sql)
      return ['', '9100']
    end
  end

  def self.update_printer(pc_ip, program, printer_ip, printer_port = '9100')
    sql = "update txdb.phicomm_mes_printer set printer_ip='#{printer_ip}', printer_port='#{printer_port}' where pc_ip='#{pc_ip}' and program='#{program}'"
    PoReceipt.connection.execute(sql)
  end

end

